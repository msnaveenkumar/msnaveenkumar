import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONTokener;

public class DatasetVerifier {

    public static String verifyDataset(String jsonData, String datasetName) {
        // Parse the JSON data
        JSONObject jsonObject;
        try {
            jsonObject = new JSONObject(new JSONTokener(jsonData));
        } catch (Exception e) {
            return "Invalid JSON data: " + e.getMessage();
        }
        
        // Check if 'datasets' key exists in the JSON data
        if (!jsonObject.has("datasets")) {
            return "No 'datasets' key found in JSON data.";
        }
        
        // Iterate through each dataset and verify the specified name and structure
        JSONArray datasets = jsonObject.getJSONArray("datasets");
        for (int i = 0; i < datasets.length(); i++) {
            JSONObject dataset = datasets.getJSONObject(i);
            if (dataset.getString("name").equals(datasetName)) {
                // Check for 'description', 'format', 'dgcDataConcepts', and 'boundaries' keys
                String[] requiredKeys = {"description", "format", "dgcDataConcepts", "boundaries"};
                StringBuilder missingKeys = new StringBuilder();
                
                for (String key : requiredKeys) {
                    if (!dataset.has(key)) {
                        if (missingKeys.length() > 0) {
                            missingKeys.append(", ");
                        }
                        missingKeys.append(key);
                    }
                }
                
                if (missingKeys.length() > 0) {
                    return "Dataset '" + datasetName + "' is missing keys: " + missingKeys.toString();
                }
                
                return "Dataset '" + datasetName + "' is correctly structured.";
            }
        }
        
        return "Dataset '" + datasetName + "' not found.";
    }

    

}
